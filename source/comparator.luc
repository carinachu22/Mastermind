module comparator (
    input clk,
    input rst,
    input z,  
    input v,
    input n,  
    input alufn_op[6],
    output out[16]  // 16 bits output
  ) {

  always {

    case(alufn_op[2:1]) {

      default:
      out[0] = b0;

      b10:          // if alufn[2:1] == 10 ---> compare less than
      out[0] = n ^ v;  // less than is equivalent to n XOR v

      b01:      // if alufn[2:1] == 01 --> compare equal to
      out[0] = z;  // equal to is equivalent to z

      b11:              // if alufn[2:1] == 11 --> compare less than or equal to
      out[0] = z | n ^ v;  // less than or equal to is equivalent to z OR ( n XOR v )

      }

    out[15:1] = b0;

  }

}