module multiplier (
    input clk,  // clock
    input rst,  // reset
    input a[16],
    input b[16],
    input alufn_signal[6],
    output out[16],
    output err[1] // general error flag
  ) {
  
  // MANUAL -- wait for two inputs using FSM and then calculate
  // AUTO -- run through cases automatically with precomputed values
  always {
    err = 0;
    
    case (alufn_signal) {
      default: out = 16b0; err = b0;
      
      // MULT - normal multiplication
      b000010: out = a * b;
      
      // DIV - normal division, check for 0 division error
      b000011:
        if (b != 0) {
          out = a / b;
          err = b0;
        }
        
        else {
          out = 16b0;
          err = b1;
        }
        
      // MOD - modulus, signed? unsigned?
        
    }
  }
}